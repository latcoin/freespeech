# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = freespeechd$(EXEEXT)
subdir = .
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/configure $(am__configure_deps) \
	$(top_srcdir)/build-aux/depcomp COPYING INSTALL \
	build-aux/compile build-aux/config.guess \
	build-aux/config.rpath build-aux/config.sub build-aux/depcomp \
	build-aux/install-sh build-aux/missing build-aux/ltmain.sh \
	$(top_srcdir)/build-aux/compile \
	$(top_srcdir)/build-aux/config.guess \
	$(top_srcdir)/build-aux/config.rpath \
	$(top_srcdir)/build-aux/config.sub \
	$(top_srcdir)/build-aux/install-sh \
	$(top_srcdir)/build-aux/ltmain.sh \
	$(top_srcdir)/build-aux/missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_berkeley_db_cxx.m4 \
	$(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_chrono.m4 \
	$(top_srcdir)/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/m4/ax_boost_locale.m4 \
	$(top_srcdir)/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/m4/ax_boost_python.m4 \
	$(top_srcdir)/m4/ax_boost_regex.m4 \
	$(top_srcdir)/m4/ax_boost_system.m4 \
	$(top_srcdir)/m4/ax_boost_thread.m4 \
	$(top_srcdir)/m4/ax_check_geoip.m4 \
	$(top_srcdir)/m4/ax_check_openssl.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 \
	$(top_srcdir)/m4/ax_python_devel.m4 \
	$(top_srcdir)/m4/gettext-lib.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/pkgconfig.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__freespeechd_SOURCES_DIST = libtorrent/src/web_connection_base.cpp \
	libtorrent/src/alert.cpp libtorrent/src/alert_manager.cpp \
	libtorrent/src/allocator.cpp libtorrent/src/asio.cpp \
	libtorrent/src/assert.cpp libtorrent/src/bandwidth_limit.cpp \
	libtorrent/src/bandwidth_manager.cpp \
	libtorrent/src/bandwidth_queue_entry.cpp \
	libtorrent/src/bloom_filter.cpp \
	libtorrent/src/broadcast_socket.cpp \
	libtorrent/src/bt_peer_connection.cpp \
	libtorrent/src/chained_buffer.cpp \
	libtorrent/src/connection_queue.cpp \
	libtorrent/src/ConvertUTF.cpp \
	libtorrent/src/create_torrent.cpp \
	libtorrent/src/disk_buffer_holder.cpp \
	libtorrent/src/disk_buffer_pool.cpp \
	libtorrent/src/disk_io_thread.cpp libtorrent/src/entry.cpp \
	libtorrent/src/enum_net.cpp libtorrent/src/error_code.cpp \
	libtorrent/src/escape_string.cpp libtorrent/src/file.cpp \
	libtorrent/src/file_pool.cpp libtorrent/src/file_storage.cpp \
	libtorrent/src/gzip.cpp libtorrent/src/hasher.cpp \
	libtorrent/src/http_connection.cpp \
	libtorrent/src/http_parser.cpp \
	libtorrent/src/http_seed_connection.cpp \
	libtorrent/src/http_stream.cpp \
	libtorrent/src/http_tracker_connection.cpp \
	libtorrent/src/i2p_stream.cpp \
	libtorrent/src/identify_client.cpp \
	libtorrent/src/instantiate_connection.cpp \
	libtorrent/src/ip_filter.cpp libtorrent/src/ip_voter.cpp \
	libtorrent/src/lazy_bdecode.cpp libtorrent/src/logger.cpp \
	libtorrent/src/lsd.cpp libtorrent/src/lt_trackers.cpp \
	libtorrent/src/magnet_uri.cpp \
	libtorrent/src/metadata_transfer.cpp libtorrent/src/mpi.c \
	libtorrent/src/natpmp.cpp libtorrent/src/parse_url.cpp \
	libtorrent/src/pe_crypto.cpp \
	libtorrent/src/peer_connection.cpp \
	libtorrent/src/piece_picker.cpp \
	libtorrent/src/packet_buffer.cpp libtorrent/src/policy.cpp \
	libtorrent/src/puff.cpp libtorrent/src/random.cpp \
	libtorrent/src/rsa.cpp libtorrent/src/rss.cpp \
	libtorrent/src/session.cpp libtorrent/src/session_impl.cpp \
	libtorrent/src/settings.cpp libtorrent/src/smart_ban.cpp \
	libtorrent/src/socket_io.cpp libtorrent/src/socket_type.cpp \
	libtorrent/src/socks5_stream.cpp libtorrent/src/stat.cpp \
	libtorrent/src/storage.cpp libtorrent/src/string_util.cpp \
	libtorrent/src/thread.cpp libtorrent/src/torrent.cpp \
	libtorrent/src/torrent_handle.cpp \
	libtorrent/src/torrent_info.cpp libtorrent/src/time.cpp \
	libtorrent/src/timestamp_history.cpp \
	libtorrent/src/tracker_manager.cpp \
	libtorrent/src/udp_socket.cpp \
	libtorrent/src/udp_tracker_connection.cpp \
	libtorrent/src/upnp.cpp libtorrent/src/ut_metadata.cpp \
	libtorrent/src/ut_pex.cpp libtorrent/src/utf8.cpp \
	libtorrent/src/utp_socket_manager.cpp \
	libtorrent/src/utp_stream.cpp \
	libtorrent/src/web_peer_connection.cpp \
	libtorrent/src/kademlia/dht_tracker.cpp \
	libtorrent/src/kademlia/find_data.cpp \
	libtorrent/src/kademlia/dht_get.cpp \
	libtorrent/src/kademlia/node.cpp \
	libtorrent/src/kademlia/node_id.cpp \
	libtorrent/src/kademlia/refresh.cpp \
	libtorrent/src/kademlia/routing_table.cpp \
	libtorrent/src/kademlia/rpc_manager.cpp \
	libtorrent/src/kademlia/logging.cpp \
	libtorrent/src/kademlia/traversal_algorithm.cpp \
	libtorrent/src/GeoIP.c libtorrent/src/asio_ssl.cpp \
	src/alert.cpp src/version.cpp src/checkpoints.cpp \
	src/netbase.cpp src/addrman.cpp src/crypter.cpp src/key.cpp \
	src/db.cpp src/init.cpp src/bitcoind.cpp src/keystore.cpp \
	src/core.cpp src/main.cpp src/net.cpp src/protocol.cpp \
	src/bitcoinrpc.cpp src/rpcdump.cpp src/rpcnet.cpp \
	src/rpcmining.cpp src/rpcwallet.cpp src/rpcblockchain.cpp \
	src/rpcrawtransaction.cpp src/script.cpp src/scrypt.cpp \
	src/softcheckpoint.cpp src/sync.cpp src/util.cpp \
	src/wallet.cpp src/walletdb.cpp src/hash.cpp src/bloom.cpp \
	src/noui.cpp src/leveldb.cpp src/txdb.cpp src/chainparams.cpp \
	src/dhtproxy.cpp src/freespeech.cpp src/freespeech_rss.cpp \
	src/freespeech_utils.cpp src/scrypt-sse2.cpp
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = libtorrent/src/kademlia/dht_tracker.$(OBJEXT) \
	libtorrent/src/kademlia/find_data.$(OBJEXT) \
	libtorrent/src/kademlia/dht_get.$(OBJEXT) \
	libtorrent/src/kademlia/node.$(OBJEXT) \
	libtorrent/src/kademlia/node_id.$(OBJEXT) \
	libtorrent/src/kademlia/refresh.$(OBJEXT) \
	libtorrent/src/kademlia/routing_table.$(OBJEXT) \
	libtorrent/src/kademlia/rpc_manager.$(OBJEXT) \
	libtorrent/src/kademlia/logging.$(OBJEXT) \
	libtorrent/src/kademlia/traversal_algorithm.$(OBJEXT)
@WITH_SHIPPED_GEOIP_TRUE@am__objects_2 =  \
@WITH_SHIPPED_GEOIP_TRUE@	libtorrent/src/GeoIP.$(OBJEXT)
@WITH_OPENSSL_TRUE@am__objects_3 = libtorrent/src/asio_ssl.$(OBJEXT)
am__objects_4 = libtorrent/src/web_connection_base.$(OBJEXT) \
	libtorrent/src/alert.$(OBJEXT) \
	libtorrent/src/alert_manager.$(OBJEXT) \
	libtorrent/src/allocator.$(OBJEXT) \
	libtorrent/src/asio.$(OBJEXT) libtorrent/src/assert.$(OBJEXT) \
	libtorrent/src/bandwidth_limit.$(OBJEXT) \
	libtorrent/src/bandwidth_manager.$(OBJEXT) \
	libtorrent/src/bandwidth_queue_entry.$(OBJEXT) \
	libtorrent/src/bloom_filter.$(OBJEXT) \
	libtorrent/src/broadcast_socket.$(OBJEXT) \
	libtorrent/src/bt_peer_connection.$(OBJEXT) \
	libtorrent/src/chained_buffer.$(OBJEXT) \
	libtorrent/src/connection_queue.$(OBJEXT) \
	libtorrent/src/ConvertUTF.$(OBJEXT) \
	libtorrent/src/create_torrent.$(OBJEXT) \
	libtorrent/src/disk_buffer_holder.$(OBJEXT) \
	libtorrent/src/disk_buffer_pool.$(OBJEXT) \
	libtorrent/src/disk_io_thread.$(OBJEXT) \
	libtorrent/src/entry.$(OBJEXT) \
	libtorrent/src/enum_net.$(OBJEXT) \
	libtorrent/src/error_code.$(OBJEXT) \
	libtorrent/src/escape_string.$(OBJEXT) \
	libtorrent/src/file.$(OBJEXT) \
	libtorrent/src/file_pool.$(OBJEXT) \
	libtorrent/src/file_storage.$(OBJEXT) \
	libtorrent/src/gzip.$(OBJEXT) libtorrent/src/hasher.$(OBJEXT) \
	libtorrent/src/http_connection.$(OBJEXT) \
	libtorrent/src/http_parser.$(OBJEXT) \
	libtorrent/src/http_seed_connection.$(OBJEXT) \
	libtorrent/src/http_stream.$(OBJEXT) \
	libtorrent/src/http_tracker_connection.$(OBJEXT) \
	libtorrent/src/i2p_stream.$(OBJEXT) \
	libtorrent/src/identify_client.$(OBJEXT) \
	libtorrent/src/instantiate_connection.$(OBJEXT) \
	libtorrent/src/ip_filter.$(OBJEXT) \
	libtorrent/src/ip_voter.$(OBJEXT) \
	libtorrent/src/lazy_bdecode.$(OBJEXT) \
	libtorrent/src/logger.$(OBJEXT) libtorrent/src/lsd.$(OBJEXT) \
	libtorrent/src/lt_trackers.$(OBJEXT) \
	libtorrent/src/magnet_uri.$(OBJEXT) \
	libtorrent/src/metadata_transfer.$(OBJEXT) \
	libtorrent/src/mpi.$(OBJEXT) libtorrent/src/natpmp.$(OBJEXT) \
	libtorrent/src/parse_url.$(OBJEXT) \
	libtorrent/src/pe_crypto.$(OBJEXT) \
	libtorrent/src/peer_connection.$(OBJEXT) \
	libtorrent/src/piece_picker.$(OBJEXT) \
	libtorrent/src/packet_buffer.$(OBJEXT) \
	libtorrent/src/policy.$(OBJEXT) libtorrent/src/puff.$(OBJEXT) \
	libtorrent/src/random.$(OBJEXT) libtorrent/src/rsa.$(OBJEXT) \
	libtorrent/src/rss.$(OBJEXT) libtorrent/src/session.$(OBJEXT) \
	libtorrent/src/session_impl.$(OBJEXT) \
	libtorrent/src/settings.$(OBJEXT) \
	libtorrent/src/smart_ban.$(OBJEXT) \
	libtorrent/src/socket_io.$(OBJEXT) \
	libtorrent/src/socket_type.$(OBJEXT) \
	libtorrent/src/socks5_stream.$(OBJEXT) \
	libtorrent/src/stat.$(OBJEXT) libtorrent/src/storage.$(OBJEXT) \
	libtorrent/src/string_util.$(OBJEXT) \
	libtorrent/src/thread.$(OBJEXT) \
	libtorrent/src/torrent.$(OBJEXT) \
	libtorrent/src/torrent_handle.$(OBJEXT) \
	libtorrent/src/torrent_info.$(OBJEXT) \
	libtorrent/src/time.$(OBJEXT) \
	libtorrent/src/timestamp_history.$(OBJEXT) \
	libtorrent/src/tracker_manager.$(OBJEXT) \
	libtorrent/src/udp_socket.$(OBJEXT) \
	libtorrent/src/udp_tracker_connection.$(OBJEXT) \
	libtorrent/src/upnp.$(OBJEXT) \
	libtorrent/src/ut_metadata.$(OBJEXT) \
	libtorrent/src/ut_pex.$(OBJEXT) libtorrent/src/utf8.$(OBJEXT) \
	libtorrent/src/utp_socket_manager.$(OBJEXT) \
	libtorrent/src/utp_stream.$(OBJEXT) \
	libtorrent/src/web_peer_connection.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) $(am__objects_3)
@USE_SSE2_TRUE@am__objects_5 = src/scrypt-sse2.$(OBJEXT)
am__objects_6 = src/alert.$(OBJEXT) src/version.$(OBJEXT) \
	src/checkpoints.$(OBJEXT) src/netbase.$(OBJEXT) \
	src/addrman.$(OBJEXT) src/crypter.$(OBJEXT) src/key.$(OBJEXT) \
	src/db.$(OBJEXT) src/init.$(OBJEXT) src/bitcoind.$(OBJEXT) \
	src/keystore.$(OBJEXT) src/core.$(OBJEXT) src/main.$(OBJEXT) \
	src/net.$(OBJEXT) src/protocol.$(OBJEXT) \
	src/bitcoinrpc.$(OBJEXT) src/rpcdump.$(OBJEXT) \
	src/rpcnet.$(OBJEXT) src/rpcmining.$(OBJEXT) \
	src/rpcwallet.$(OBJEXT) src/rpcblockchain.$(OBJEXT) \
	src/rpcrawtransaction.$(OBJEXT) src/script.$(OBJEXT) \
	src/scrypt.$(OBJEXT) src/softcheckpoint.$(OBJEXT) \
	src/sync.$(OBJEXT) src/util.$(OBJEXT) src/wallet.$(OBJEXT) \
	src/walletdb.$(OBJEXT) src/hash.$(OBJEXT) src/bloom.$(OBJEXT) \
	src/noui.$(OBJEXT) src/leveldb.$(OBJEXT) src/txdb.$(OBJEXT) \
	src/chainparams.$(OBJEXT) src/dhtproxy.$(OBJEXT) \
	src/freespeech.$(OBJEXT) src/freespeech_rss.$(OBJEXT) \
	src/freespeech_utils.$(OBJEXT) $(am__objects_5)
am_freespeechd_OBJECTS = $(am__objects_4) $(am__objects_6)
freespeechd_OBJECTS = $(am_freespeechd_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
freespeechd_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(freespeechd_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(freespeechd_SOURCES)
DIST_SOURCES = $(am__freespeechd_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_CHRONO_LIB = @BOOST_CHRONO_LIB@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_FILESYSTEM_LIB = @BOOST_FILESYSTEM_LIB@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_LOCALE_LIB = @BOOST_LOCALE_LIB@
BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@
BOOST_PYTHON_LIB = @BOOST_PYTHON_LIB@
BOOST_REGEX_LIB = @BOOST_REGEX_LIB@
BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@
BOOST_THREAD_LIB = @BOOST_THREAD_LIB@
BREW = @BREW@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COMPILETIME_OPTIONS = @COMPILETIME_OPTIONS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DB_CXX_CPPFLAGS = @DB_CXX_CPPFLAGS@
DB_CXX_LDFLAGS = @DB_CXX_LDFLAGS@
DB_CXX_LIBS = @DB_CXX_LIBS@
DEBUGFLAGS = @DEBUGFLAGS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GENISOIMAGE = @GENISOIMAGE@
GEOIP_CFLAGS = @GEOIP_CFLAGS@
GEOIP_LIBS = @GEOIP_LIBS@
GREP = @GREP@
ICONV_LIBS = @ICONV_LIBS@
INSTALL = @INSTALL@
INSTALLNAMETOOL = @INSTALLNAMETOOL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEVELDB_TARGET_FLAGS = @LEVELDB_TARGET_FLAGS@
LIBICONV = @LIBICONV@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBICONV = @LTLIBICONV@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENSSL_INCLUDES = @OPENSSL_INCLUDES@
OPENSSL_LDFLAGS = @OPENSSL_LDFLAGS@
OPENSSL_LIBS = @OPENSSL_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PORT = @PORT@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
PYTHON = @PYTHON@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_EXTRA_LDFLAGS = @PYTHON_EXTRA_LDFLAGS@
PYTHON_EXTRA_LIBS = @PYTHON_EXTRA_LIBS@
PYTHON_INSTALL_PARAMS = @PYTHON_INSTALL_PARAMS@
PYTHON_LDFLAGS = @PYTHON_LDFLAGS@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_SITE_PKG = @PYTHON_SITE_PKG@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WINDOWS_BITS = @WINDOWS_BITS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
ACLOCAL_AMFLAGS = -I m4
EXTRA_DIST = \
  COPYING

LIBLEVELDB = src/leveldb/libleveldb.a
LIBMEMENV = src/leveldb/libmemenv.a
KADEMLIA_SOURCES = \
  libtorrent/src/kademlia/dht_tracker.cpp      \
  libtorrent/src/kademlia/find_data.cpp        \
  libtorrent/src/kademlia/dht_get.cpp          \
  libtorrent/src/kademlia/node.cpp             \
  libtorrent/src/kademlia/node_id.cpp          \
  libtorrent/src/kademlia/refresh.cpp          \
  libtorrent/src/kademlia/routing_table.cpp    \
  libtorrent/src/kademlia/rpc_manager.cpp      \
  libtorrent/src/kademlia/logging.cpp          \
  libtorrent/src/kademlia/traversal_algorithm.cpp

@WITH_SHIPPED_GEOIP_TRUE@GEOIP_SOURCES = libtorrent/src/GeoIP.c
@WITH_OPENSSL_TRUE@ASIO_OPENSSL_SOURCES = libtorrent/src/asio_ssl.cpp
LIBTORRENT_SOURCES = \
  libtorrent/src/web_connection_base.cpp     \
  libtorrent/src/alert.cpp                       \
  libtorrent/src/alert_manager.cpp               \
  libtorrent/src/allocator.cpp                   \
  libtorrent/src/asio.cpp                        \
  libtorrent/src/assert.cpp                      \
  libtorrent/src/bandwidth_limit.cpp             \
  libtorrent/src/bandwidth_manager.cpp           \
  libtorrent/src/bandwidth_queue_entry.cpp       \
  libtorrent/src/bloom_filter.cpp                \
  libtorrent/src/broadcast_socket.cpp            \
  libtorrent/src/bt_peer_connection.cpp          \
  libtorrent/src/chained_buffer.cpp              \
  libtorrent/src/connection_queue.cpp            \
  libtorrent/src/ConvertUTF.cpp                  \
  libtorrent/src/create_torrent.cpp              \
  libtorrent/src/disk_buffer_holder.cpp          \
  libtorrent/src/disk_buffer_pool.cpp            \
  libtorrent/src/disk_io_thread.cpp              \
  libtorrent/src/entry.cpp                       \
  libtorrent/src/enum_net.cpp                    \
  libtorrent/src/error_code.cpp                  \
  libtorrent/src/escape_string.cpp               \
  libtorrent/src/file.cpp                        \
  libtorrent/src/file_pool.cpp                   \
  libtorrent/src/file_storage.cpp                \
  libtorrent/src/gzip.cpp                        \
  libtorrent/src/hasher.cpp                      \
  libtorrent/src/http_connection.cpp             \
  libtorrent/src/http_parser.cpp                 \
  libtorrent/src/http_seed_connection.cpp        \
  libtorrent/src/http_stream.cpp                 \
  libtorrent/src/http_tracker_connection.cpp     \
  libtorrent/src/i2p_stream.cpp                  \
  libtorrent/src/identify_client.cpp             \
  libtorrent/src/instantiate_connection.cpp      \
  libtorrent/src/ip_filter.cpp                   \
  libtorrent/src/ip_voter.cpp                    \
  libtorrent/src/lazy_bdecode.cpp                \
  libtorrent/src/logger.cpp                      \
  libtorrent/src/lsd.cpp                         \
  libtorrent/src/lt_trackers.cpp                 \
  libtorrent/src/magnet_uri.cpp                  \
  libtorrent/src/metadata_transfer.cpp           \
  libtorrent/src/mpi.c                           \
  libtorrent/src/natpmp.cpp                      \
  libtorrent/src/parse_url.cpp                   \
  libtorrent/src/pe_crypto.cpp                   \
  libtorrent/src/peer_connection.cpp             \
  libtorrent/src/piece_picker.cpp                \
  libtorrent/src/packet_buffer.cpp               \
  libtorrent/src/policy.cpp                      \
  libtorrent/src/puff.cpp                        \
  libtorrent/src/random.cpp                      \
  libtorrent/src/rsa.cpp                         \
  libtorrent/src/rss.cpp                         \
  libtorrent/src/session.cpp                     \
  libtorrent/src/session_impl.cpp                \
  libtorrent/src/settings.cpp                    \
  libtorrent/src/smart_ban.cpp                   \
  libtorrent/src/socket_io.cpp                   \
  libtorrent/src/socket_type.cpp                 \
  libtorrent/src/socks5_stream.cpp               \
  libtorrent/src/stat.cpp                        \
  libtorrent/src/storage.cpp                     \
  libtorrent/src/string_util.cpp                 \
  libtorrent/src/thread.cpp                      \
  libtorrent/src/torrent.cpp                     \
  libtorrent/src/torrent_handle.cpp              \
  libtorrent/src/torrent_info.cpp                \
  libtorrent/src/time.cpp                        \
  libtorrent/src/timestamp_history.cpp           \
  libtorrent/src/tracker_manager.cpp             \
  libtorrent/src/udp_socket.cpp                  \
  libtorrent/src/udp_tracker_connection.cpp      \
  libtorrent/src/upnp.cpp                        \
  libtorrent/src/ut_metadata.cpp                 \
  libtorrent/src/ut_pex.cpp                      \
  libtorrent/src/utf8.cpp                        \
  libtorrent/src/utp_socket_manager.cpp          \
  libtorrent/src/utp_stream.cpp                  \
  libtorrent/src/web_peer_connection.cpp         \
  \
  $(KADEMLIA_SOURCES)             \
  $(GEOIP_SOURCES)                \
  $(ASIO_OPENSSL_SOURCES)

@USE_SSE2_TRUE@SSE2_SOURCES = src/scrypt-sse2.cpp
BITCOIN_TWISTER_SOURCES = \
    src/alert.cpp \
    src/version.cpp \
    src/checkpoints.cpp \
    src/netbase.cpp \
    src/addrman.cpp \
    src/crypter.cpp \
    src/key.cpp \
    src/db.cpp \
    src/init.cpp \
    src/bitcoind.cpp \
    src/keystore.cpp \
    src/core.cpp \
    src/main.cpp \
    src/net.cpp \
    src/protocol.cpp \
    src/bitcoinrpc.cpp \
    src/rpcdump.cpp \
    src/rpcnet.cpp \
    src/rpcmining.cpp \
    src/rpcwallet.cpp \
    src/rpcblockchain.cpp \
    src/rpcrawtransaction.cpp \
    src/script.cpp \
    src/scrypt.cpp \
    src/softcheckpoint.cpp \
    src/sync.cpp \
    src/util.cpp \
    src/wallet.cpp \
    src/walletdb.cpp \
    src/hash.cpp \
    src/bloom.cpp \
    src/noui.cpp \
    src/leveldb.cpp \
    src/txdb.cpp \
    src/chainparams.cpp \
    src/dhtproxy.cpp \
    src/freespeech.cpp \
    src/freespeech_rss.cpp \
    src/freespeech_utils.cpp \
    $(SSE2_SOURCES)

freespeechd_SOURCES = $(LIBTORRENT_SOURCES) $(BITCOIN_TWISTER_SOURCES)
freespeechd_LDFLAGS = @OPENSSL_LDFLAGS@ @DB_CXX_LDFLAGS@
freespeechd_DEPENDENCIES = $(LIBLEVELDB) $(LIBMEMENV)
freespeechd_LDADD = $(LIBLEVELDB) $(LIBMEMENV) \
    @BOOST_SYSTEM_LIB@ @BOOST_FILESYSTEM_LIB@ @BOOST_PROGRAM_OPTIONS_LIB@ @BOOST_THREAD_LIB@ @BOOST_CHRONO_LIB@ @BOOST_LOCALE_LIB@ \
    @BOOST_REGEX_LIB@ @BOOST_LDFLAGS@ @DB_CXX_LIBS@ @OPENSSL_LIBS@

AM_CPPFLAGS = -ftemplate-depth-100 -DBOOST_SPIRIT_THREADSAFE -D_FILE_OFFSET_BITS=64 \
    -I$(top_srcdir)/libtorrent/include \
    -I$(top_srcdir)/src \
    -I$(top_srcdir)/src/leveldb/include -I$(top_srcdir)/src/leveldb/helpers \
    @DEBUGFLAGS@ @BOOST_CPPFLAGS@ @OPENSSL_INCLUDES@ @DB_CXX_CPPFLAGS@

AM_LDFLAGS = @OPENSSL_LDFLAGS@
CLEANFILES = $(LIBLEVELDB) $(LIBMEMENV)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
libtorrent/src/$(am__dirstamp):
	@$(MKDIR_P) libtorrent/src
	@: > libtorrent/src/$(am__dirstamp)
libtorrent/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libtorrent/src/$(DEPDIR)
	@: > libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/web_connection_base.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/alert.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/alert_manager.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/allocator.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/asio.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/assert.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/bandwidth_limit.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/bandwidth_manager.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/bandwidth_queue_entry.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/bloom_filter.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/broadcast_socket.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/bt_peer_connection.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/chained_buffer.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/connection_queue.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/ConvertUTF.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/create_torrent.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/disk_buffer_holder.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/disk_buffer_pool.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/disk_io_thread.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/entry.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/enum_net.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/error_code.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/escape_string.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/file.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/file_pool.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/file_storage.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/gzip.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/hasher.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/http_connection.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/http_parser.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/http_seed_connection.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/http_stream.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/http_tracker_connection.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/i2p_stream.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/identify_client.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/instantiate_connection.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/ip_filter.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/ip_voter.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/lazy_bdecode.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/logger.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/lsd.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/lt_trackers.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/magnet_uri.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/metadata_transfer.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/mpi.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/natpmp.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/parse_url.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/pe_crypto.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/peer_connection.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/piece_picker.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/packet_buffer.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/policy.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/puff.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/random.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/rsa.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/rss.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/session.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/session_impl.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/settings.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/smart_ban.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/socket_io.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/socket_type.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/socks5_stream.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/stat.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/storage.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/string_util.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/thread.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/torrent.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/torrent_handle.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/torrent_info.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/time.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/timestamp_history.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/tracker_manager.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/udp_socket.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/udp_tracker_connection.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/upnp.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/ut_metadata.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/ut_pex.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/utf8.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/utp_socket_manager.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/utp_stream.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/web_peer_connection.$(OBJEXT):  \
	libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/kademlia/$(am__dirstamp):
	@$(MKDIR_P) libtorrent/src/kademlia
	@: > libtorrent/src/kademlia/$(am__dirstamp)
libtorrent/src/kademlia/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libtorrent/src/kademlia/$(DEPDIR)
	@: > libtorrent/src/kademlia/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/kademlia/dht_tracker.$(OBJEXT):  \
	libtorrent/src/kademlia/$(am__dirstamp) \
	libtorrent/src/kademlia/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/kademlia/find_data.$(OBJEXT):  \
	libtorrent/src/kademlia/$(am__dirstamp) \
	libtorrent/src/kademlia/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/kademlia/dht_get.$(OBJEXT):  \
	libtorrent/src/kademlia/$(am__dirstamp) \
	libtorrent/src/kademlia/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/kademlia/node.$(OBJEXT):  \
	libtorrent/src/kademlia/$(am__dirstamp) \
	libtorrent/src/kademlia/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/kademlia/node_id.$(OBJEXT):  \
	libtorrent/src/kademlia/$(am__dirstamp) \
	libtorrent/src/kademlia/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/kademlia/refresh.$(OBJEXT):  \
	libtorrent/src/kademlia/$(am__dirstamp) \
	libtorrent/src/kademlia/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/kademlia/routing_table.$(OBJEXT):  \
	libtorrent/src/kademlia/$(am__dirstamp) \
	libtorrent/src/kademlia/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/kademlia/rpc_manager.$(OBJEXT):  \
	libtorrent/src/kademlia/$(am__dirstamp) \
	libtorrent/src/kademlia/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/kademlia/logging.$(OBJEXT):  \
	libtorrent/src/kademlia/$(am__dirstamp) \
	libtorrent/src/kademlia/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/kademlia/traversal_algorithm.$(OBJEXT):  \
	libtorrent/src/kademlia/$(am__dirstamp) \
	libtorrent/src/kademlia/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/GeoIP.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
libtorrent/src/asio_ssl.$(OBJEXT): libtorrent/src/$(am__dirstamp) \
	libtorrent/src/$(DEPDIR)/$(am__dirstamp)
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/alert.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/version.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/checkpoints.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/netbase.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/addrman.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/crypter.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/key.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/db.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/init.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/bitcoind.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/keystore.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/core.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/main.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/net.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/protocol.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/bitcoinrpc.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/rpcdump.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/rpcnet.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/rpcmining.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/rpcwallet.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/rpcblockchain.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/rpcrawtransaction.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/script.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/scrypt.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/softcheckpoint.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/sync.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/util.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/wallet.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/walletdb.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/hash.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/bloom.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/noui.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/leveldb.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/txdb.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/chainparams.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dhtproxy.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/freespeech.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/freespeech_rss.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/freespeech_utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/scrypt-sse2.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

freespeechd$(EXEEXT): $(freespeechd_OBJECTS) $(freespeechd_DEPENDENCIES) $(EXTRA_freespeechd_DEPENDENCIES) 
	@rm -f freespeechd$(EXEEXT)
	$(AM_V_CXXLD)$(freespeechd_LINK) $(freespeechd_OBJECTS) $(freespeechd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f libtorrent/src/*.$(OBJEXT)
	-rm -f libtorrent/src/kademlia/*.$(OBJEXT)
	-rm -f src/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/ConvertUTF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/GeoIP.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/alert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/alert_manager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/allocator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/asio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/asio_ssl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/assert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/bandwidth_limit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/bandwidth_manager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/bandwidth_queue_entry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/bloom_filter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/broadcast_socket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/bt_peer_connection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/chained_buffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/connection_queue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/create_torrent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/disk_buffer_holder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/disk_buffer_pool.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/disk_io_thread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/entry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/enum_net.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/error_code.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/escape_string.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/file_pool.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/file_storage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/gzip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/hasher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/http_connection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/http_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/http_seed_connection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/http_stream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/http_tracker_connection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/i2p_stream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/identify_client.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/instantiate_connection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/ip_filter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/ip_voter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/lazy_bdecode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/logger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/lsd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/lt_trackers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/magnet_uri.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/metadata_transfer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/mpi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/natpmp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/packet_buffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/parse_url.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/pe_crypto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/peer_connection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/piece_picker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/policy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/puff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/random.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/rsa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/rss.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/session.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/session_impl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/settings.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/smart_ban.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/socket_io.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/socket_type.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/socks5_stream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/stat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/storage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/string_util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/thread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/time.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/timestamp_history.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/torrent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/torrent_handle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/torrent_info.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/tracker_manager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/udp_socket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/udp_tracker_connection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/upnp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/ut_metadata.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/ut_pex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/utf8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/utp_socket_manager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/utp_stream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/web_connection_base.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/$(DEPDIR)/web_peer_connection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/kademlia/$(DEPDIR)/dht_get.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/kademlia/$(DEPDIR)/dht_tracker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/kademlia/$(DEPDIR)/find_data.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/kademlia/$(DEPDIR)/logging.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/kademlia/$(DEPDIR)/node.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/kademlia/$(DEPDIR)/node_id.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/kademlia/$(DEPDIR)/refresh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/kademlia/$(DEPDIR)/routing_table.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/kademlia/$(DEPDIR)/rpc_manager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libtorrent/src/kademlia/$(DEPDIR)/traversal_algorithm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/addrman.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/alert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/bitcoind.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/bitcoinrpc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/bloom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/chainparams.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/checkpoints.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/core.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/crypter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/db.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dhtproxy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/init.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/key.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/keystore.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/leveldb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/net.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/netbase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/noui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/protocol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/rpcblockchain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/rpcdump.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/rpcmining.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/rpcnet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/rpcrawtransaction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/rpcwallet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/script.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/scrypt-sse2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/scrypt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/softcheckpoint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/sync.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/freespeech.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/freespeech_rss.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/freespeech_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/txdb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/version.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/wallet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/walletdb.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f libtorrent/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f libtorrent/src/$(am__dirstamp)
	-rm -f libtorrent/src/kademlia/$(DEPDIR)/$(am__dirstamp)
	-rm -f libtorrent/src/kademlia/$(am__dirstamp)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf libtorrent/src/$(DEPDIR) libtorrent/src/kademlia/$(DEPDIR) src/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf libtorrent/src/$(DEPDIR) libtorrent/src/kademlia/$(DEPDIR) src/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-cscope clean-generic clean-libtool \
	clean-local cscope cscopelist-am ctags ctags-am dist dist-all \
	dist-bzip2 dist-gzip dist-lzip dist-shar dist-tarZ dist-xz \
	dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags \
	distcleancheck distdir distuninstallcheck dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS


# NOTE: This dependency is not strictly necessary, but without it make may try to build both in parallel, which breaks the LevelDB build system in a race
$(LIBLEVELDB): $(LIBMEMENV)

$(LIBLEVELDB) $(LIBMEMENV):
	@echo "Building LevelDB ..." && $(MAKE) -C $(@D) $(@F) CXX="$(CXX)" \
	  CC="$(CC)" PLATFORM=$(TARGET_OS) AR="$(AR)" $(LEVELDB_TARGET_FLAGS) \
          OPT="$(CXXFLAGS) $(CPPFLAGS)"

clean-local:
	-$(MAKE) -C src/leveldb clean
	rm -f src/leveldb/*/*.gcno src/leveldb/helpers/memenv/*.gcno

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
